#include <stdio.h>
#include <queue>
#include <vector>
#include<stack>
#include<algorithm>
#include<functional>
#include<iostream>
#define MAX 10001

using namespace std;

int check[MAX]={false};
vector<pair<int,int>> mArr[MAX];


void prim()
{
    check[1]=true;
    priority_queue<pair<int,int>> Q;
    for(auto p:mArr[1])
    {
        Q.push(make_pair(-p.second,p.first));
    }
    int ans=0;
    while(!Q.empty())
    {
        pair<int,int> p=Q.top();
        Q.pop();
        if(!check[p.second]){
            check[p.second]=true;
            ans+=(-p.first);
            int x=p.second;
            for(pair<int,int> p : mArr[x])
            {
                Q.push(make_pair(-p.second,p.first));
            }
        }
    }



    printf("%d",ans);
}

int main(void)
{
    int n=0,m=0;
    scanf("%d %d",&n,&m);
    for(int i=1;i<=m;i++)
    {
        int a=0,b=0,c=0;
        scanf("%d %d %d",&a,&b,&c);
        mArr[a].push_back(make_pair(b,c));
        mArr[b].push_back(make_pair(a,c));
    }
    prim();
    return 0;
}


